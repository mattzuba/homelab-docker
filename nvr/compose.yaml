include:
  - path: ../common/portainer/compose.yaml
  - path: ../common/watchtower/compose.yaml

services:
  caddy:
    restart: unless-stopped
    build:
      context: .
      dockerfile_inline: |
        FROM caddy:builder AS builder
        RUN xcaddy build --with github.com/caddy-dns/cloudflare
        
        FROM caddy:latest
        COPY --from=builder /usr/bin/caddy /usr/bin/caddy
    ports:
      - "443:443"
      - "8443:8443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
    environment:
      CLOUDFLARE_API_TOKEN: ${CF_Token}

  caddy-base:
    image: caddy:latest
    profiles:
      - do-not-run
    labels:
      - com.centurylinklabs.watchtower.scope=${HOSTNAME}
      - com.centurylinklabs.watchtower.monitor-only=true

  frigate:
    privileged: true # this may not be necessary for all setups
    image: ghcr.io/blakeblackshear/frigate:stable
    environment:
      FRIGATE_MQTT_USER: "${FRIGATE_MQTT_USER}"
      FRIGATE_MQTT_PASSWORD: "${FRIGATE_MQTT_PASSWORD}"
      FRIGATE_REOLINK_RTSP_USERNAME: "${FRIGATE_REOLINK_RTSP_USERNAME}"
      FRIGATE_REOLINK_RTSP_PASSWORD: "${FRIGATE_REOLINK_RTSP_PASSWORD}"
      FRIGATE_TAPO_RTSP_USERNAME: "${FRIGATE_TAPO_RTSP_USERNAME}"
      FRIGATE_TAPO_RTSP_PASSWORD: "${FRIGATE_TAPO_RTSP_PASSWORD}"
    restart: unless-stopped
    shm_size: "256mb" # update for your cameras based on calculation above
    devices:
      - /dev/bus/usb:/dev/bus/usb
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    cap_add:
      - CAP_PERFMON
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - frigate_config:/config
      - ./frigate-config.yaml:/config/config.yml
      - /mnt/media/frigate:/media/frigate
      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    ports:
      - "127.0.0.1:5000:5000"
      - "8554:8554" # RTSP feeds
      - "8555:8555/tcp" # WebRTC over tcp
      - "8555:8555/udp" # WebRTC over udp
    labels:
      - com.centurylinklabs.watchtower.scope=${HOSTNAME}

  doubletake:
    image: ghcr.io/skrashevich/double-take:latest
    restart: unless-stopped
    volumes:
      - /mnt/media/doubletake:/.storage
      - ./doubletake-config.yml:/.storage/config/config.yml
      - ./doubletake-secrets.yml:/.storage/config/secrets.yml
    ports:
      - "127.0.0.1:3000:3000"
    labels:
      - com.centurylinklabs.watchtower.scope=${HOSTNAME}

  codeproject:
    image: codeproject/ai-server:cuda12_2
    restart: unless-stopped
    ports:
      - "127.0.0.1:32168:32168"
    volumes:
      - /mnt/media/codeproject/etc:/etc/codeproject/ai
      - /mnt/media/codeproject/opt:/app/modules
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

volumes:
  frigate_config:
  caddy_data:
